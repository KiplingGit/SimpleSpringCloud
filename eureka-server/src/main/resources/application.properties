server.port=1112
eureka.instance.hostname=localhost
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
#eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/


eureka.client.service-url.defaultZone=http://127.0.0.1:1111/eureka/


#第一节课
#1.server.port=1111表示设置该服务注册中心的端口号 
#2.eureka.instance.hostname=localhost表示设置该服务注册中心的hostname 
#3.eureka.client.register-with-eureka=false,由于我们目前创建的应用是一个服务注册中心，而不是普通的应用，默认情况下，这个应用会向注册中心（也是它自己）注册它自己，设置为false表示禁止这种默认行为 
#4.eureka.client.fetch-registry=false,表示不去检索其他的服务，因为服务注册中心本身的职责就是维护服务实例，它也不需要去检索其他服务

#java -jar eureka-server-0.0.1-SNAPSHOT.jar --spring.profiles.active=peer1
#java -jar eureka-server-0.0.1-SNAPSHOT.jar --spring.profiles.active=peer2


#第二节课
#1.在peer1的配置文件中，让它的service-url指向peer2，在peer2的配置文件中让它的service-url指向peer1 
#2.为了让peer1和peer2能够被正确的访问到，我们需要在C:\Windows\System32\drivers\etc目录下的hosts文件总添加两行配置，如下: 
#127.0.0.1 peer1 
#127.0.0.1 peer2 
#3.由于peer1和peer2互相指向对方，实际上我们构建了一个双节点的服务注册中心集群